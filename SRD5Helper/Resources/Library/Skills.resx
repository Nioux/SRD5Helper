<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="acrobatics" xml:space="preserve">
    <value>acrobatics</value>
  </data>
  <data name="acrobatics-description" xml:space="preserve">
    <value>Acrobaties reflète la capacité du personnage à garder son équilibre dans des situations délicates.</value>
  </data>
  <data name="acrobatics-name" xml:space="preserve">
    <value>Acrobaties</value>
  </data>
  <data name="animal-handling" xml:space="preserve">
    <value>animal-handling</value>
  </data>
  <data name="animal-handling-description" xml:space="preserve">
    <value>Dressage permet de comprendre des animaux sauvages ou domestiques.</value>
  </data>
  <data name="animal-handling-name" xml:space="preserve">
    <value>Dressage</value>
  </data>
  <data name="arcana" xml:space="preserve">
    <value>arcana</value>
  </data>
  <data name="arcana-description" xml:space="preserve">
    <value>Arcanes représente la mémoire du savoir magique.</value>
  </data>
  <data name="arcana-name" xml:space="preserve">
    <value>Arcanes</value>
  </data>
  <data name="athletics" xml:space="preserve">
    <value>athletics</value>
  </data>
  <data name="athletics-description" xml:space="preserve">
    <value>Athlétisme détermine l’aptitude à sauter, escalader un mur, nager, courir à grande vitesse, etc.</value>
  </data>
  <data name="athletics-name" xml:space="preserve">
    <value>Athlétisme</value>
  </data>
  <data name="deception" xml:space="preserve">
    <value>deception</value>
  </data>
  <data name="deception-description" xml:space="preserve">
    <value>Supercherie permet de tromper autrui, par la parole ou le mouvement, afin de faire croire à une autre version de la vérité.</value>
  </data>
  <data name="deception-name" xml:space="preserve">
    <value>Supercherie</value>
  </data>
  <data name="history" xml:space="preserve">
    <value>history</value>
  </data>
  <data name="history-description" xml:space="preserve">
    <value>Histoire représente la mémoire du savoir historique.</value>
  </data>
  <data name="history-name" xml:space="preserve">
    <value>Histoire</value>
  </data>
  <data name="insight" xml:space="preserve">
    <value>insight</value>
  </data>
  <data name="insight-description" xml:space="preserve">
    <value>Perspicacité permet de percer à jour les intentions des autres.</value>
  </data>
  <data name="insight-name" xml:space="preserve">
    <value>Perspicacité</value>
  </data>
  <data name="intimidation" xml:space="preserve">
    <value>intimidation</value>
  </data>
  <data name="intimidation-description" xml:space="preserve">
    <value>Intimidation permet de convaincre ou de forcer quelqu’un à agir en l’impressionnant, par sa carrure ou par la menace.</value>
  </data>
  <data name="intimidation-name" xml:space="preserve">
    <value>Intimidation</value>
  </data>
  <data name="investigation" xml:space="preserve">
    <value>investigation</value>
  </data>
  <data name="investigation-description" xml:space="preserve">
    <value>Investigation représente la capacité à découvrir et interpréter des indices.</value>
  </data>
  <data name="investigation-name" xml:space="preserve">
    <value>Investigation</value>
  </data>
  <data name="medicine" xml:space="preserve">
    <value>medicine</value>
  </data>
  <data name="medicine-description" xml:space="preserve">
    <value>Médecine permet de soigner une blessure ou d’identifier une maladie.</value>
  </data>
  <data name="medicine-name" xml:space="preserve">
    <value>Médecine</value>
  </data>
  <data name="nature" xml:space="preserve">
    <value>nature</value>
  </data>
  <data name="nature-description" xml:space="preserve">
    <value>Nature représente la connaissance et l’expérience de la nature (les différents terrains, la faune et la flore, etc.)</value>
  </data>
  <data name="nature-name" xml:space="preserve">
    <value>Nature</value>
  </data>
  <data name="perception" xml:space="preserve">
    <value>perception</value>
  </data>
  <data name="perception-description" xml:space="preserve">
    <value>Perception permet d’employer ses sens afin de repérer ou trouver des indices et informations.</value>
  </data>
  <data name="perception-name" xml:space="preserve">
    <value>Perception</value>
  </data>
  <data name="performance" xml:space="preserve">
    <value>performance</value>
  </data>
  <data name="performance-description" xml:space="preserve">
    <value>Représentation permet de se donner en spectacle et de s’attirer l’attention comme l’affection d’une foule.</value>
  </data>
  <data name="performance-name" xml:space="preserve">
    <value>Représentation</value>
  </data>
  <data name="persuasion" xml:space="preserve">
    <value>persuasion</value>
  </data>
  <data name="persuasion-description" xml:space="preserve">
    <value>Persuasion permet de convaincre en utilisant des arguments logiques, faisant appel à la raison et la compréhension.</value>
  </data>
  <data name="persuasion-name" xml:space="preserve">
    <value>Persuasion</value>
  </data>
  <data name="religion" xml:space="preserve">
    <value>religion</value>
  </data>
  <data name="religion-description" xml:space="preserve">
    <value>Religion représente la mémoire du savoir théologique.</value>
  </data>
  <data name="religion-name" xml:space="preserve">
    <value>Religion</value>
  </data>
  <data name="sleight-of-hand" xml:space="preserve">
    <value>sleight-of-hand</value>
  </data>
  <data name="sleight-of-hand-description" xml:space="preserve">
    <value>Escamotage illustre le talent pour les tours de passe-passe.</value>
  </data>
  <data name="sleight-of-hand-name" xml:space="preserve">
    <value>Escamotage</value>
  </data>
  <data name="stealth" xml:space="preserve">
    <value>stealth</value>
  </data>
  <data name="stealth-description" xml:space="preserve">
    <value>Discrétion a de nombreuses utilités. Elle permet généralement de ne pas se faire remarquer.</value>
  </data>
  <data name="stealth-name" xml:space="preserve">
    <value>Discrétion</value>
  </data>
  <data name="survival" xml:space="preserve">
    <value>survival</value>
  </data>
  <data name="survival-description" xml:space="preserve">
    <value>Survie permet d’évoluer dans un environnement naturel hostile, d’y trouver de la nourriture, des passages sans danger et des abris.</value>
  </data>
  <data name="survival-name" xml:space="preserve">
    <value>Survie</value>
  </data>
</root>