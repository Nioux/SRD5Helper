//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SRD5Helper.Resources.Library {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Abilities {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Abilities() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SRD5Helper.Resources.Library.Abilities", typeof(Abilities).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Le Charisme est l’aptitude sociale d’un personnage : sa capacité à interagir avec les autres, son aura et son bagout..
        /// </summary>
        internal static string charisma_brief {
            get {
                return ResourceManager.GetString("charisma-brief", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à # Charisme
        ///
        ///Le Charisme est l’aptitude sociale d’un personnage : sa capacité à interagir avec les autres, son aura et son bagout.
        ///
        ///## Tests de Charisme
        ///
        ///Un test de Charisme sera nécessaire afin de convaincre quelqu’un, quel que soit le moyen de persuasion employé, afin de briller en société ou d’en imposer.
        ///
        ///## Compétences associées
        ///
        ///Quatre compétences sont associées au Charisme.
        ///
        ///* Supercherie permet de tromper autrui, par la parole ou le mouvement, afin de faire croire à une autre version de l [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string charisma_description {
            get {
                return ResourceManager.GetString("charisma-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Charisme.
        /// </summary>
        internal static string charisma_name {
            get {
                return ResourceManager.GetString("charisma-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à La Constitution détermine la résistance physique du personnage. Elle mesure la solidité de sa santé et l’ampleur de son endurance..
        /// </summary>
        internal static string constitution_brief {
            get {
                return ResourceManager.GetString("constitution-brief", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à # Constitution
        ///
        ///La Constitution détermine la résistance physique du personnage. Elle mesure la solidité de sa santé et l’ampleur de son endurance.
        ///
        ///## Tests de Constitution
        ///
        ///Les tests de Constitution n’interviennent que lorsqu’un personnage tente de dépasser ses limites, comme en retenant sa respiration, en résistant aux effets de la fatigue, du manque de sommeil ou en dépassant la consommation d’alcool raisonnable.
        ///
        ///## Compétence associée
        ///
        ///Aucune compétence n’est associée à la Constitution.
        ///
        ///## [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string constitution_description {
            get {
                return ResourceManager.GetString("constitution-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Constitution.
        /// </summary>
        internal static string constitution_name {
            get {
                return ResourceManager.GetString("constitution-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à La Dextérité détermine les réflexes et l’agilité d’un personnage, ainsi que sa capacité à travailler en finesse (comme en crochetant une serrure ou en faisant un noeud)..
        /// </summary>
        internal static string dexterity_brief {
            get {
                return ResourceManager.GetString("dexterity-brief", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à # Dextérité
        ///
        ///La Dextérité détermine les réflexes et l’agilité d’un personnage, ainsi que sa capacité à travailler en finesse (comme en crochetant une serrure ou en faisant un noeud).
        ///
        ///## Tests de Dextérité
        ///
        ///La MJ peut demander un test de Dextérité lorsque le personnage tente de se déplacer rapidement ou discrètement, ou lorsqu’il tente de traverser un terrain dangereux. La MJ peut également demander un test de Dextérité pour toutes les actions qui demandent une mobilité fine importante au niveau des m [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string dexterity_description {
            get {
                return ResourceManager.GetString("dexterity-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Dextérité.
        /// </summary>
        internal static string dexterity_name {
            get {
                return ResourceManager.GetString("dexterity-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Le score d’Intelligence reflète la capacité du personnage à comprendre, se remémorer et interpréter des informations..
        /// </summary>
        internal static string intelligence_brief {
            get {
                return ResourceManager.GetString("intelligence-brief", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à # Intelligence
        ///
        ///Le score d’Intelligence reflète la capacité du personnage à comprendre, se remémorer et interpréter des informations.
        ///
        ///## Tests d’Intelligence
        ///
        ///Un test d’Intelligence doit être effectué lorsqu’un personnage est confronté à un sujet complexe lui demandant de réfléchir ou de mobiliser des connaissances diverses, anciennes ou présentes dans son environnement immédiat.
        ///
        ///## Compétences associées
        ///
        ///Cinq compétences sont associées à l’Intelligence.
        ///
        ///* Arcanes représente la mémoire du sav [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string intelligence_description {
            get {
                return ResourceManager.GetString("intelligence-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Intelligence.
        /// </summary>
        internal static string intelligence_name {
            get {
                return ResourceManager.GetString("intelligence-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à La Force représente l’aptitude physique du personnage, ses capacités en athlétisme et sa puissance musculaire..
        /// </summary>
        internal static string strength_brief {
            get {
                return ResourceManager.GetString("strength-brief", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à # Force
        ///
        ///La Force représente l’aptitude physique du personnage, ses capacités en athlétisme et sa puissance musculaire.
        ///
        ///## Tests de Force
        ///
        ///Un test de Force est réalisé lorsqu’un personnage emploie sa force brute en déplaçant un objet lourd, en forçant un passage dans une foule, en se libérant de ses liens par la seule force, etc. La Force intervient également lors d’une attaque à l’aide d’une arme de corps à corps.
        ///
        ///## Compétence associée
        ///
        ///La compétence associée à la Force est l’Athlétisme. Celle [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string strength_description {
            get {
                return ResourceManager.GetString("strength-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Force.
        /// </summary>
        internal static string strength_name {
            get {
                return ResourceManager.GetString("strength-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à La Sagesse se distingue de l’Intelligence en représentant la compréhension du monde et des autres, l’instinct, le sang-froid et la sensibilité..
        /// </summary>
        internal static string wisdom_brief {
            get {
                return ResourceManager.GetString("wisdom-brief", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à # Sagesse
        ///
        ///La Sagesse se distingue de l’Intelligence en représentant la compréhension du monde et des autres, l’instinct, le sang-froid et la sensibilité.
        ///
        ///## Tests de Sagesse
        ///
        ///Un personnage devra réussir un test de Sagesse afin de comprendre le comportement d’une autre créature, par l’empathie ou par l’analyse, pour remarquer des choses dans son environnement.
        ///
        ///## Compétences associées
        ///
        ///Cinq compétences sont associées à la Sagesse.
        ///
        ///* Dressage permet de comprendre des animaux sauvages ou domest [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string wisdom_description {
            get {
                return ResourceManager.GetString("wisdom-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sagesse.
        /// </summary>
        internal static string wisdom_name {
            get {
                return ResourceManager.GetString("wisdom-name", resourceCulture);
            }
        }
    }
}
