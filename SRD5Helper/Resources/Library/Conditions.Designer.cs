//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SRD5Helper.Resources.Library {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Conditions {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Conditions() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SRD5Helper.Resources.Library.Conditions", typeof(Conditions).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à blinded.
        /// </summary>
        internal static string blinded {
            get {
                return ResourceManager.GetString("blinded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * Si une créature est aveuglée, elle ne peut plus réussir de tests de caractéristiques qui demandent d’utiliser ses capacités visuelles. On ne lance même pas le dé.
        ///* Une créature aveuglée subit un désavantage sur ses jets d’attaque.
        ///* Les attaques qui ciblent une créature aveuglée bénéficient d’un avantage..
        /// </summary>
        internal static string blinded_description {
            get {
                return ResourceManager.GetString("blinded-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Aveuglé.
        /// </summary>
        internal static string blinded_name {
            get {
                return ResourceManager.GetString("blinded-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à charmed.
        /// </summary>
        internal static string charmed {
            get {
                return ResourceManager.GetString("charmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * Si une créature est charmée par une autre, elle ne peut plus l’attaquer ni la cibler avec un quelconque effet néfaste.
        ///* Si une créature en a charmé une autre, elle bénéficie d’un avantage pour toutes ses interactions sociales avec elle..
        /// </summary>
        internal static string charmed_description {
            get {
                return ResourceManager.GetString("charmed-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Charmé.
        /// </summary>
        internal static string charmed_name {
            get {
                return ResourceManager.GetString("charmed-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à deafened.
        /// </summary>
        internal static string deafened {
            get {
                return ResourceManager.GetString("deafened", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * Si une créature est assourdie, elle ne peut plus réussir de tests de caractéristiques qui demandent d’utiliser ses capacités auditives. On ne lance même pas le dé..
        /// </summary>
        internal static string deafened_description {
            get {
                return ResourceManager.GetString("deafened-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Assourdi.
        /// </summary>
        internal static string deafened_name {
            get {
                return ResourceManager.GetString("deafened-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à frightened.
        /// </summary>
        internal static string frightened {
            get {
                return ResourceManager.GetString("frightened", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * Si une créature est terrorisée et que la source de sa terreur se trouve dans son champ de vision, elle subit un désavantage sur ses tests de caractéristiques et ses jets d’attaque.
        ///* Une créature terrorisée ne peut pas décider d’approcher la source de sa terreur..
        /// </summary>
        internal static string frightened_description {
            get {
                return ResourceManager.GetString("frightened-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Terrorisé.
        /// </summary>
        internal static string frightened_name {
            get {
                return ResourceManager.GetString("frightened-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à grappled.
        /// </summary>
        internal static string grappled {
            get {
                return ResourceManager.GetString("grappled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * Si une créature est empoignée, sa vitesse passe à 0. Tout bonus ou malus est ignoré. Pour s’en défaire, elle doit parvenir à infliger l’état neutralisé à l’empoigneur.
        ///* Il est possible pour d’autres combattants de sortir une créature de cet état. En effet, si une créature empoignée sort de la portée de l’empoigneur ou de l’effet d’empoignade (celui-ci pouvant être d’origine magique), cet état prend fin..
        /// </summary>
        internal static string grappled_description {
            get {
                return ResourceManager.GetString("grappled-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Empoigné.
        /// </summary>
        internal static string grappled_name {
            get {
                return ResourceManager.GetString("grappled-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à incapacitated.
        /// </summary>
        internal static string incapacitated {
            get {
                return ResourceManager.GetString("incapacitated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * Si une créature est neutralisée, elle ne peut plus effectuer d’action pendant son tour de jeu. Elle ne peut plus non plus effectuer de réaction..
        /// </summary>
        internal static string incapacitated_description {
            get {
                return ResourceManager.GetString("incapacitated-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Neutralisé.
        /// </summary>
        internal static string incapacitated_name {
            get {
                return ResourceManager.GetString("incapacitated-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à invisible.
        /// </summary>
        internal static string invisible {
            get {
                return ResourceManager.GetString("invisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * À moins d’être bruyante ou de laisser des traces de son passage, une créature invisible est parfaitement indétectable à l’oeil nu. Elle bénéficie d’un avantage sur ses tests d’attaque.
        ///* En termes de règles, l’invisibilité correspond à la visibilité nulle (voir section L&apos;aventure).
        ///* Les attaques qui ciblent une créature invisible subissent un désavantage..
        /// </summary>
        internal static string invisible_description {
            get {
                return ResourceManager.GetString("invisible-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invisible.
        /// </summary>
        internal static string invisible_name {
            get {
                return ResourceManager.GetString("invisible-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à paralyzed.
        /// </summary>
        internal static string paralyzed {
            get {
                return ResourceManager.GetString("paralyzed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * Si une créature est paralysée, elle ne peut plus réussir ses jets de sauvegarde de Force ou de Dextérité. On ne lance même pas le dé.
        ///* Les attaques de corps à corps qui ciblent une créature paralysée bénéficient d’un avantage et infligent un coup critique.
        ///* Les attaques à distance qui ciblent une créature paralysée bénéficient d’un avantage.
        ///* Une créature paralysée est aussi neutralisée. Elle ne peut plus se déplacer ni communiquer..
        /// </summary>
        internal static string paralyzed_description {
            get {
                return ResourceManager.GetString("paralyzed-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Paralisé.
        /// </summary>
        internal static string paralyzed_name {
            get {
                return ResourceManager.GetString("paralyzed-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à petrified.
        /// </summary>
        internal static string petrified {
            get {
                return ResourceManager.GetString("petrified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * Si une créature est transformée en substance solide inanimée, elle est pétrifiée. Tous ses objets subissent le même sort. Son poids est multiplié par 10. La créature devient immunisée contre le poison et les maladies et ne vieillit plus (néanmoins, tous ces états reprennent lorsque l’état pétrifié disparaît).
        ///* Si une créature est pétrifiée, elle ne peut plus réussir ses jets de sauvegarde de Force ou de Dextérité. On ne lance même pas le dé.
        ///* Les attaques qui ciblent une créature pétrifiée bénéficient [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string petrified_description {
            get {
                return ResourceManager.GetString("petrified-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Pétrifié.
        /// </summary>
        internal static string petrified_name {
            get {
                return ResourceManager.GetString("petrified-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à poisoned.
        /// </summary>
        internal static string poisoned {
            get {
                return ResourceManager.GetString("poisoned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * Si une créature est empoisonnée, tous ses jets d’attaque et tests de caractéristiques souffrent d’un désavantage..
        /// </summary>
        internal static string poisoned_description {
            get {
                return ResourceManager.GetString("poisoned-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Empoisonné.
        /// </summary>
        internal static string poisoned_name {
            get {
                return ResourceManager.GetString("poisoned-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à prone.
        /// </summary>
        internal static string prone {
            get {
                return ResourceManager.GetString("prone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * Lorsqu’une créature se met ou se retrouve _à terre_, elle subit un _désavantage_ sur ses jets d’attaque.
        ///* Les attaques au corps à corps qui ciblent une créature à terre obtiennent un _avantage_.
        ///* Les attaques à distance qui ciblent une créature à terre obtiennent un _désavantage_.
        ///* Se relever permet d’annuler cet état..
        /// </summary>
        internal static string prone_description {
            get {
                return ResourceManager.GetString("prone-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à À terre.
        /// </summary>
        internal static string prone_name {
            get {
                return ResourceManager.GetString("prone-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à restrained.
        /// </summary>
        internal static string restrained {
            get {
                return ResourceManager.GetString("restrained", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * Si une créature est entravée, sa vitesse passe à 0. Tout bonus ou malus est ignoré.
        ///* La créature subit également un désavantage sur ses jets d’attaque et de sauvegarde de Dextérité.
        ///* Les attaques qui ciblent une créature entravée bénéficient d’un avantage..
        /// </summary>
        internal static string restrained_description {
            get {
                return ResourceManager.GetString("restrained-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Entravé.
        /// </summary>
        internal static string restrained_name {
            get {
                return ResourceManager.GetString("restrained-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à special.
        /// </summary>
        internal static string special {
            get {
                return ResourceManager.GetString("special", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .
        /// </summary>
        internal static string special_description {
            get {
                return ResourceManager.GetString("special-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Spécial.
        /// </summary>
        internal static string special_name {
            get {
                return ResourceManager.GetString("special-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à stunned.
        /// </summary>
        internal static string stunned {
            get {
                return ResourceManager.GetString("stunned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * Si une créature est étourdie, elle ne peut pas réussir ses jets de sauvegarde de Force ou de Dextérité. On ne lance même pas le dé.
        ///* Les attaques qui ciblent une créature étourdie bénéficient d’un avantage.
        ///* Une créature étourdie est aussi neutralisée. Elle ne peut plus se déplacer ni s’exprimer clairement..
        /// </summary>
        internal static string stunned_description {
            get {
                return ResourceManager.GetString("stunned-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Étourdi.
        /// </summary>
        internal static string stunned_name {
            get {
                return ResourceManager.GetString("stunned-name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unconscious.
        /// </summary>
        internal static string unconscious {
            get {
                return ResourceManager.GetString("unconscious", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à * Une créature inconsciente rate automatiquement tous ses jets de sauvegarde de Force et de Dextérité.
        ///* Les attaques de corps à corps qui ciblent une créature inconsciente bénéficient d’un avantage et infligent un coup critique si elles touchent la cible.
        ///* Les attaques à distance qui ciblent une créature inconsciente bénéficient d’un avantage.
        ///* Lorsqu’une créature obtient cet état, elle lâche tout ce qu’elle tenait. Elle ne peut plus ni se déplacer, ni agir, ni communiquer, ni percevoir.
        ///* Une créatu [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string unconscious_description {
            get {
                return ResourceManager.GetString("unconscious-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Inconscient.
        /// </summary>
        internal static string unconscious_name {
            get {
                return ResourceManager.GetString("unconscious-name", resourceCulture);
            }
        }
    }
}
