<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="charisma-brief" xml:space="preserve">
    <value>Le Charisme est l’aptitude sociale d’un personnage : sa capacité à interagir avec les autres, son aura et son bagout.</value>
  </data>
  <data name="charisma-description" xml:space="preserve">
    <value># Charisme

Le Charisme est l’aptitude sociale d’un personnage : sa capacité à interagir avec les autres, son aura et son bagout.

## Tests de Charisme

Un test de Charisme sera nécessaire afin de convaincre quelqu’un, quel que soit le moyen de persuasion employé, afin de briller en société ou d’en imposer.

## Compétences associées

Quatre compétences sont associées au Charisme.

* Supercherie permet de tromper autrui, par la parole ou le mouvement, afin de faire croire à une autre version de la vérité.
* Intimidation permet de convaincre ou de forcer quelqu’un à agir en l’impressionnant, par sa carrure ou par la menace.
* Représentation permet de se donner en spectacle et de s’attirer l’attention comme l’affection d’une foule.
* Persuasion permet de convaincre en utilisant des arguments logiques, faisant appel à la raison et la compréhension.</value>
  </data>
  <data name="charisma-name" xml:space="preserve">
    <value>Charisme</value>
  </data>
  <data name="constitution-brief" xml:space="preserve">
    <value>La Constitution détermine la résistance physique du personnage. Elle mesure la solidité de sa santé et l’ampleur de son endurance.</value>
  </data>
  <data name="constitution-description" xml:space="preserve">
    <value># Constitution

La Constitution détermine la résistance physique du personnage. Elle mesure la solidité de sa santé et l’ampleur de son endurance.

## Tests de Constitution

Les tests de Constitution n’interviennent que lorsqu’un personnage tente de dépasser ses limites, comme en retenant sa respiration, en résistant aux effets de la fatigue, du manque de sommeil ou en dépassant la consommation d’alcool raisonnable.

## Compétence associée

Aucune compétence n’est associée à la Constitution.

## Points de vie

Le nombre de points de vie d’un personnage dépend, entre autres, de son modificateur de Constitution. En fait, à chaque dé de vie lancé pour déterminer ce nombre, on ajoute le modificateur de Constitution.</value>
  </data>
  <data name="constitution-name" xml:space="preserve">
    <value>Constitution</value>
  </data>
  <data name="dexterity-brief" xml:space="preserve">
    <value>La Dextérité détermine les réflexes et l’agilité d’un personnage, ainsi que sa capacité à travailler en finesse (comme en crochetant une serrure ou en faisant un noeud).</value>
  </data>
  <data name="dexterity-description" xml:space="preserve">
    <value># Dextérité

La Dextérité détermine les réflexes et l’agilité d’un personnage, ainsi que sa capacité à travailler en finesse (comme en crochetant une serrure ou en faisant un noeud).

## Tests de Dextérité

La MJ peut demander un test de Dextérité lorsque le personnage tente de se déplacer rapidement ou discrètement, ou lorsqu’il tente de traverser un terrain dangereux. La MJ peut également demander un test de Dextérité pour toutes les actions qui demandent une mobilité fine importante au niveau des mains, des doigts ou de la coordination oeil-main.

## Compétences associées

Trois compétences sont associées à la Dextérité.

* La compétence Acrobaties reflète la capacité du personnage à garder son équilibre dans des situations délicates.
* La compétence Escamotage illustre le talent pour les tours de passe-passe.
* La compétence Discrétion a de nombreuses utilités. Elle permet généralement de ne pas se faire remarquer.

## Jets d’attaque et de dégâts

Lors d’une attaque avec une arme à distance, on ajoute le modificateur de Dextérité au jet d’attaque et au jet de dégâts.
Également, si une arme de corps à corps a la caractéristique Finesse, son utilisation fait intervenir le modificateur de Dextérité au lieu du modificateur de Force.

## Classe d’armure

Certaines armures permettent d’ajouter une partie ou le total de son modificateur de Dextérité à sa Classe d'armure.

## Initiative

Lorsqu’un combat commence, il faut déterminer l’ordre dans lesquels les différents combattants agiront. Pour cela, on utilise l’initiative : un résultat déterminé par un test de Dextérité.</value>
  </data>
  <data name="dexterity-name" xml:space="preserve">
    <value>Dextérité</value>
  </data>
  <data name="intelligence-brief" xml:space="preserve">
    <value>Le score d’Intelligence reflète la capacité du personnage à comprendre, se remémorer et interpréter des informations.</value>
  </data>
  <data name="intelligence-description" xml:space="preserve">
    <value># Intelligence

Le score d’Intelligence reflète la capacité du personnage à comprendre, se remémorer et interpréter des informations.

## Tests d’Intelligence

Un test d’Intelligence doit être effectué lorsqu’un personnage est confronté à un sujet complexe lui demandant de réfléchir ou de mobiliser des connaissances diverses, anciennes ou présentes dans son environnement immédiat.

## Compétences associées

Cinq compétences sont associées à l’Intelligence.

* Arcanes représente la mémoire du savoir magique.
* Histoire représente la mémoire du savoir historique.
* Investigation représente la capacité à découvrir et interpréter des indices.
* Nature représente la connaissance et l’expérience de la nature (les différents terrains, la faune et la flore, etc.)
* Religion représente la mémoire du savoir théologique.

## Caractéristique d’incantation

L’Intelligence est utilisée par les magiciens comme caractéristique d’incantation et pour déterminer les DD des jets de sauvegarde de leurs sorts.</value>
  </data>
  <data name="intelligence-name" xml:space="preserve">
    <value>Intelligence</value>
  </data>
  <data name="strength-brief" xml:space="preserve">
    <value>La Force représente l’aptitude physique du personnage, ses capacités en athlétisme et sa puissance musculaire.</value>
  </data>
  <data name="strength-description" xml:space="preserve">
    <value># Force

La Force représente l’aptitude physique du personnage, ses capacités en athlétisme et sa puissance musculaire.

## Tests de Force

Un test de Force est réalisé lorsqu’un personnage emploie sa force brute en déplaçant un objet lourd, en forçant un passage dans une foule, en se libérant de ses liens par la seule force, etc. La Force intervient également lors d’une attaque à l’aide d’une arme de corps à corps.

## Compétence associée

La compétence associée à la Force est l’Athlétisme. Celle ci détermine l’aptitude à sauter, escalader un mur, nager, courir à grande vitesse, etc.

## Jets d’attaque et de dégâts

Attaquer avec une arme de corps à corps demande d’ajouter son modificateur de Force au jet d’attaque et au jet de dégâts. Il est également possible de lancer une arme de corps à corps, et le modificateur de Force sera encore une fois appliqué.</value>
  </data>
  <data name="strength-name" xml:space="preserve">
    <value>Force</value>
  </data>
  <data name="wisdom-brief" xml:space="preserve">
    <value>La Sagesse se distingue de l’Intelligence en représentant la compréhension du monde et des autres, l’instinct, le sang-froid et la sensibilité.</value>
  </data>
  <data name="wisdom-description" xml:space="preserve">
    <value># Sagesse

La Sagesse se distingue de l’Intelligence en représentant la compréhension du monde et des autres, l’instinct, le sang-froid et la sensibilité.

## Tests de Sagesse

Un personnage devra réussir un test de Sagesse afin de comprendre le comportement d’une autre créature, par l’empathie ou par l’analyse, pour remarquer des choses dans son environnement.

## Compétences associées

Cinq compétences sont associées à la Sagesse.

* Dressage permet de comprendre des animaux sauvages ou domestiques.
* Perspicacité permet de percer à jour les intentions des autres.
* Médecine permet de soigner une blessure ou d’identifier une maladie.
* Perception permet d’employer ses sens afin de repérer ou trouver des indices et informations.
* Survie permet d’évoluer dans un environnement naturel hostile, d’y trouver de la nourriture, des passages sans danger et des abris.

## Caractéristique d’incantation

La Sagesse est utilisée par les clercs comme caractéristique d’incantation et pour déterminer les DD des jets de sauvegarde de leurs sorts.

## Perception passive

En ajoutant 10 au modificateur de Sagesse, on obtient le score de Perception passive. Cette caractéristique est testée lorsque le personnage peut remarquer quelque chose mais qu’il n’y fait pas attention.

Cette caractéristique est utilisée comme DD lorsqu’un personnage tente de ne pas être perçu par un autre.</value>
  </data>
  <data name="wisdom-name" xml:space="preserve">
    <value>Sagesse</value>
  </data>
</root>